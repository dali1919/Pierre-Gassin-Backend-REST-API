// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebsiteRESTAPI.Models;

namespace WebsiteRESTAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210721173320_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebsiteRESTAPI.Models.AuthTokens", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Token")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.Blog", b =>
                {
                    b.Property<long>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cover")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.Coeff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Couverture")
                        .HasColumnType("float");

                    b.Property<double>("Demi")
                        .HasColumnType("float");

                    b.Property<double>("Double")
                        .HasColumnType("float");

                    b.Property<double>("Europe")
                        .HasColumnType("float");

                    b.Property<double>("Mondial")
                        .HasColumnType("float");

                    b.Property<double>("National")
                        .HasColumnType("float");

                    b.Property<double>("Pleine")
                        .HasColumnType("float");

                    b.Property<double>("Print")
                        .HasColumnType("float");

                    b.Property<double>("Print_web")
                        .HasColumnType("float");

                    b.Property<double>("Quart")
                        .HasColumnType("float");

                    b.Property<double>("Web")
                        .HasColumnType("float");

                    b.Property<double>("n1000")
                        .HasColumnType("float");

                    b.Property<double>("n10000")
                        .HasColumnType("float");

                    b.Property<double>("n100000")
                        .HasColumnType("float");

                    b.Property<double>("ns100000")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Coeffs");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.Image", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Main")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("ReportageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tagged")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Taille1")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Taille2")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Taille3")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)");

                    b.HasKey("ImageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.ImagesVendues", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.ToTable("ImagesVendues");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.Reportage", b =>
                {
                    b.Property<long>("ReportageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Likes")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ReportageId");

                    b.ToTable("Reportage");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.Transaction", b =>
                {
                    b.Property<long>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImagesIds")
                        .HasColumnType("varchar(500)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Adress")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Appartement")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Company")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tva")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebsiteRESTAPI.Models.User", b =>
                {
                    b.OwnsMany("WebsiteRESTAPI.Entity.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserEmail")
                                .IsRequired()
                                .HasColumnType("varchar(50)");

                            b1.HasKey("Id");

                            b1.HasIndex("UserEmail");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("UserEmail");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
